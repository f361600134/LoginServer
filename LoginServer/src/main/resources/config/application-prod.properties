#System settings
#Spring Boot中的乱码和编码问题
spring.http.encoding.force=true

#Server
server.port=8181
server.tomcat.uri-encoding=UTF-8
#server.context-path=/LoginServer

#hibernate
#ddl-auto:create----Creates new tables during the application starts. 每次运行该程序，没有表格会新建表格，表内有数据会清空
#ddl-auto:create-drop----Removes all data after the application shuts down. 每次程序结束的时候会清空表
#ddl-auto:update----Just update data, it can't remove old data or create tables.每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新
#ddl-auto:validate----运行程序会校验数据与数据库的字段类型是否相同，不同会报错
#spring.jpa.show-sql=false
#spring.jpa.generate-ddl=false
#sharding-jdbc 不能完美支持update, 当创建一次表之后, 需要修改关键字为none
spring.jpa.hibernate.ddl-auto=none

#Hibernate 默认下划线方式, 当前使用驼峰式命名
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#遇到大写字母 加"_"的命名
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#用于项目中注入bean
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#sharding-jdbc databases
#http://shardingsphere.io/document/current/cn/manual/sharding-jdbc/configuration/config-spring-boot/
sharding.jdbc.datasource.names=ds
sharding.jdbc.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds.url=jdbc:mysql://localhost:3306/login_db?useUnicode\=true&characterEncoding\=utf-8
sharding.jdbc.datasource.ds.username=root
sharding.jdbc.datasource.ds.password=123456
sharding.jdbc.datasource.ds.max-idle=10
sharding.jdbc.datasource.ds.max-wait=10000
sharding.jdbc.datasource.ds.min-idle=5
sharding.jdbc.datasource.ds.initial-size=5
#指定连接超时时间
sharding.jdbc.datasource.ds.connection-timeout=30000
#指定连接池中连接的最大生存时间，毫秒单位.
sharding.jdbc.datasource.ds.max-lifetime=14400000
#连接时通过制定的sql验证连接的有效性
sharding.jdbc.datasource.ds.validation-query=SELECT 1 FROM DUAL
#当从连接池获取连接时，是否测试该连接
sharding.jdbc.datasource.ds.test-on-borrow=false
#空闲时测试连接保证连接有效性
sharding.jdbc.datasource.ds.test-while-idle=true
#指定连接池最大的连接数，包括使用中的和空闲的连接.
sharding.jdbc.datasource.ds.maximum-pool-size = 30
#空闲连接回收的时间间隔，与test-while-idle一起使用,设置5分钟
sharding.jdbc.datasource.ds.time-between-eviction-runs-millis=300000
#连接池空闲连接的有效时间 ，设置30分钟
sharding.jdbc.datasource.ds.min-evictable-idle-time-millis=1800000

#如果配置错误,则会对每个表进行操作, 最后出现batch update异常.
#所有数据节点
sharding.jdbc.config.sharding.tables.order_pay.actual-data-nodes=ds.order_pay_${1..31}
#指定分表规则
#sharding.jdbc.config.sharding.tables.order.table-strategy.inline.sharding-column= xxx
#sharding.jdbc.config.sharding.tables.order.table-strategy.inline.algorithm-expression=order_${xxx % 31}
#自定义分表类
sharding.jdbc.config.sharding.tables.order_pay.table-strategy.standard.sharding-column=creationTime
sharding.jdbc.config.sharding.tables.order_pay.table-strategy.standard.precise-algorithm-class-name=com.qlbs.Bridge.interceptor.ShardingAlgorithm
#是否开启SQL显示，默认值: false
#sharding.jdbc.config.sharding.props.sql.show = true
#工作线程数量，默认值: CPU核数
#sharding.jdbc.config.sharding.props.executor.size = 8

#线程相关配置
spring.task.pool.corePoolSize=8
spring.task.pool.maximumPoolSize=20
spring.task.pool.keepAliveTime=60
spring.task.pool.queueCapacity=100

#自定义配置
#游戏类的全局配置
define.serverMgrUrl=http://192.168.6.138:8180/service/services
#map=a:b,c:d
define.gameKeyMap=K47NQS:qlbskey
#渠道对应渠道商,1:a;2:b;
define.channelInfoMap = 1:youxifan

